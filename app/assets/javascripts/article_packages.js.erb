$(function(){

  // check if the File API is available and call an Init() function:
  if (window.File && window.FileList && window.FileReader) {
    Init();
  }

  // initialize
  function Init() {

    // var fileselect = document.getElementById("fileselect"),
    //     dropzone = document.getElementById("dropzone"),
    //     submitbutton = document.getElementById("submitbutton");

    // // file select
    // fileselect.addEventListener("change", handleMultiFileSelect, false);

    // // is XHR2 available?
    // var xhr = new XMLHttpRequest();
    // if (xhr.upload) {    
    //   // file drop
    //   dropzone.addEventListener("dragover", handleDragOver, false);
    //   dropzone.addEventListener("dragleave", handleDragOver, false);
    //   dropzone.addEventListener("drop", handleFileSelect, false);
    //   // dropzone.style.display = "block";      
    //   // remove submit button
    //   // submitbutton.style.display = "none";
    // }

  }

  // **********************************************************************************************

  function handleMultiFileSelect(evt) {

    // cancel event and hover styling
    // handleDragOver(evt); geht nicht...

    // // fetch FileList object
    // var files = e.target.files || e.dataTransfer.files;


    var files = evt.target.files; // FileList object

    // to only display the chosen files, the content of 'list' needs to get deleted
    // but this code does NOT work: document.getElementById('list').innerHTML("");
    // instead we have to use a local variable:
    var list = document.getElementById('list');
    list.innerHTML = "";

    var output = [];

    // Loop through the FileList and render image files as thumbnails.
    for (var i=0,f; f=files[i]; i++){

      // Only process image files.
      if (f.type.match('image.*')) {
        var reader = new FileReader();

        // Closure to capture the file information.
        reader.onload = (function(theFile) {
          return function(e) {
            // Render thumbnail.

            // var span = document.createElement('span');
            // //the following code has to be in one line, no line breaks allowed!!
            // span.innerHTML = ['<img class="thumb" src="', e.target.result, '" title="', escape(theFile.name), '" />'].join('');           
            // //span.innerHTML = ['<div class="box"><div class="onhover"><img src="', e.target.result, '" /></div><img class="thumb" src="', e.target.result, '" title="', escape(theFile.name), '" /></div>'].join('');
            // document.getElementById('list').insertBefore(span, null);                 

            output.push('<li><img class="thumb" src="', e.target.result, '" title="', escape(theFile.name), '" /> <strong>', escape(theFile.name), '</strong> (', theFile.type || 'n/a', ') - ', theFile.size, ' bytes, last modified: ', theFile.lastModifiedDate ? theFile.lastModifiedDate.toLocaleDateString() : 'n/a', '</li>');
            // document.getElementById('list').innerHTML = '<ul>' + output.join('') + '</ul>';
            list.innerHTML = '<ul>' + output.join('') + '</ul>';
          };
        })(f);

      // Read in the image file as a data URL.
      reader.readAsDataURL(f);
      }
    }
  }

  // **********************************************************************************************

 function handleFileSelect(evt) {

    evt.stopPropagation();
    evt.preventDefault();

    var files = evt.dataTransfer.files;
    var list = document.getElementById('list');
    list.innerHTML = "";

    var output = []    

    for (var i=0,f; f=files[i]; i++){

      if (f.type.match('image.*')) {
        var reader = new FileReader();

        reader.onload = (function(theFile) {
          return function(e) {
            output.push('<li><img class="thumb" src="', e.target.result, '" title="', escape(theFile.name), '" /> <strong>', escape(theFile.name), '</strong> (', theFile.type || 'n/a', ') - ', theFile.size, ' bytes, last modified: ', theFile.lastModifiedDate ? theFile.lastModifiedDate.toLocaleDateString() : 'n/a', '</li>');
            list.innerHTML = '<ul>' + output.join('') + '</ul>';
          };
        })(f);

      reader.readAsDataURL(f);
      }
    }

  }

  function handleDragOver(evt) {
    evt.stopPropagation();
    evt.preventDefault();
    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
    evt.target.className = (evt.type == "dragover" ? "hover" : "");
  }

// **********************************************************************************************

  $('.datepicker').datepicker();

// **********************************************************************************************

  $('.image_original').hide();

  var cancel = false;
  $('.image_thumb').hover(function(){
    $('.image_original').show();
  },function(){
    if(!cancel)
      $('.image_original').hide();
  });
  $('.image_thumb').click(function(){
    cancel = (cancel) ? false : true;
  });

// **********************************************************************************************
  
  $(".article_packages_image").hover(function(){
    $( this ).fadeOut( 100 );
    $( this ).fadeIn( 500 );
    // alert("hellooo");
    // $('.article_packages_image_original').html("hello world!!");
  })

  


})

